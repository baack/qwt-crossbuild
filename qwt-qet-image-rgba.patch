From 84d1bda4e949ea76fa93bb4aeb6582461bfac6c5 Mon Sep 17 00:00:00 2001
From: Ben Brian <mail@benbrian.net>
Date: Thu, 13 Jun 2019 08:07:39 -0400
Subject: [PATCH] Fixes QWT get-image-rgba loading of certain app icons e.g.
 Magnifier, Quick Assist, Narrator. Old approach using `szDisplayName`, etc is
 too unreliable. The simpler approach is to retrieve the icon index from the
 system image list using `SHGFI_SYSICONINDEX`, and `ImageList_GetIcon()` to
 return the actual icon. This is also the approach recommended by Microsoft:
 https://devblogs.microsoft.com/oldnewthing/?p=11653

---
 .../get-image-rgba/get-image-rgba.c           | 34 +++++++------------
 .../get-image-rgba/get-image-rgba.vcxproj     |  6 +++-
 2 files changed, 18 insertions(+), 22 deletions(-)

diff --git a/src/qrexec-services/get-image-rgba/get-image-rgba.c b/src/qrexec-services/get-image-rgba/get-image-rgba.c
index 19f45a1..6b941ee 100644
--- a/src/qrexec-services/get-image-rgba/get-image-rgba.c
+++ b/src/qrexec-services/get-image-rgba/get-image-rgba.c
@@ -22,6 +22,7 @@
 #include <windows.h>
 #include <Shlwapi.h>
 #include <shellapi.h>
+#include <CommCtrl.h>
 
 #include <stdio.h>
 #include <io.h>
@@ -124,7 +125,7 @@ int wmain(int argc, WCHAR *argv[])
     BYTE *buffer;
     BITMAPINFO bmi;
     int x, y;
-    DWORD_PTR ret;
+    HIMAGELIST imgList;
     DWORD status;
 #ifdef WRITE_PPM
     FILE *f1;
@@ -148,33 +149,24 @@ int wmain(int argc, WCHAR *argv[])
     LogDebug("LinkPath: %s", linkPath);
 
     CoInitialize(NULL);
-    // We use SHGFI_ICONLOCATION and load the icon manually later, because icons retrieved by
+    // We use SHGFI_SYSICONINDEX and load the icon manually later, because icons retrieved by
     // SHGFI_ICON always have the shortcut arrow overlay even if the overlay is not visible
     // normally (eg. for start menu shortcuts).
-    ret = SHGetFileInfo(linkPath, 0, &shfi, sizeof(shfi), SHGFI_ICONLOCATION);
-    LogDebug("SHGetFileInfo(%s) returned 0x%x, shfi.szDisplayName='%s', shfi.iIcon=%d", linkPath, ret, shfi.szDisplayName, shfi.iIcon);
-    if (!ret)
+    // https://devblogs.microsoft.com/oldnewthing/?p=11653
+    imgList = (HIMAGELIST)SHGetFileInfo(linkPath, 0, &shfi, sizeof(shfi), SHGFI_SYSICONINDEX);
+    LogDebug("SHGetFileInfo(%s) returned 0x%x, shfi.iIcon=%d", linkPath, imgList, shfi.iIcon);
+    if (!imgList)
     {
-        status = perror("SHGetFileInfo(SHGFI_ICONLOCATION)");
+        status = perror("SHGetFileInfo(SHGFI_SYSICONINDEX)");
         goto cleanup;
     }
 
-    if (shfi.szDisplayName[0] == 0)
+    // Retrieve the icon directly from the system image list
+    ico = ImageList_GetIcon(imgList, shfi.iIcon, ILD_TRANSPARENT);
+    if (!ico)
     {
-        // This can happen for some reason: SHGetFileInfo returns nonzero (success according to MSDN),
-        // but the icon info is missing, even if the file clearly has an icon. We fall back to
-        // SHGFI_ICON which will retrieve an icon with the shortcut arrow overlay.
-        ret = SHGetFileInfo(linkPath, 0, &shfi, sizeof(shfi), SHGFI_ICON);
-        if (!ret)
-        {
-            status = perror("SHGetFileInfo(SHGFI_ICON)");
-            goto cleanup;
-        }
-        ico = shfi.hIcon;
-    }
-    else
-    {
-        ico = ExtractIcon(0, shfi.szDisplayName, shfi.iIcon);
+        status = perror("ImageList_GetIcon(ILD_TRANSPARENT)");
+        goto cleanup;
     }
 
     // Create bitmap for the icon.
diff --git a/vs2017/qrexec-services/get-image-rgba/get-image-rgba.vcxproj b/vs2017/qrexec-services/get-image-rgba/get-image-rgba.vcxproj
index da2c34f..04a7381 100644
--- a/vs2017/qrexec-services/get-image-rgba/get-image-rgba.vcxproj
+++ b/vs2017/qrexec-services/get-image-rgba/get-image-rgba.vcxproj
@@ -81,6 +81,7 @@
     <Link>
       <SubSystem>Console</SubSystem>
       <GenerateDebugInformation>true</GenerateDebugInformation>
+      <AdditionalDependencies>Comctl32.lib;%(AdditionalDependencies)</AdditionalDependencies>
     </Link>
   </ItemDefinitionGroup>
   <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
@@ -96,6 +97,7 @@
     <Link>
       <SubSystem>Console</SubSystem>
       <GenerateDebugInformation>true</GenerateDebugInformation>
+      <AdditionalDependencies>Comctl32.lib;%(AdditionalDependencies)</AdditionalDependencies>
     </Link>
   </ItemDefinitionGroup>
   <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
@@ -114,6 +116,7 @@
       <GenerateDebugInformation>true</GenerateDebugInformation>
       <EnableCOMDATFolding>true</EnableCOMDATFolding>
       <OptimizeReferences>true</OptimizeReferences>
+      <AdditionalDependencies>Comctl32.lib;%(AdditionalDependencies)</AdditionalDependencies>
     </Link>
   </ItemDefinitionGroup>
   <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
@@ -132,6 +135,7 @@
       <GenerateDebugInformation>true</GenerateDebugInformation>
       <EnableCOMDATFolding>true</EnableCOMDATFolding>
       <OptimizeReferences>true</OptimizeReferences>
+      <AdditionalDependencies>Comctl32.lib;%(AdditionalDependencies)</AdditionalDependencies>
     </Link>
   </ItemDefinitionGroup>
   <ItemGroup>
@@ -148,4 +152,4 @@
       <UserProperties />
     </VisualStudio>
   </ProjectExtensions>
-</Project>
+</Project>
\ No newline at end of file
